<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:myname="http://www.lexueba.com/schema/user"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.lexueba.com/schema/user http://www.lexueba.com/schema/user.xsd">


       <!--import 标签导入外部的xml-->
       <import resource="mybatis.xml"/>
       <!--alias 标签设置bean的别名-->
       <alias name="user" alias="user4"/>

       <!--name属性别名设置 或者如上用alias标签  user2,user3,user4-->
       <bean id="user" name="user2,user3" class="com.example.beans.bean.User">
              <property name="name" value="root"/>
              <property name="age" value="999"/>
              <property name="sex" value="男"/>
              <property name="hobbies">
                     <list>
                            <value>游泳</value>
                            <value>玩游戏</value>
                            <value>听音乐</value>
                            <ref bean="student"/>
                     </list>
              </property>
       </bean>

       <bean id="userForMeta" class="com.example.beans.bean.User">
              <meta key="USER_META_KEY" value="king test"/>
       </bean>

       <bean id="getBeanTest" class="com.example.beans.bean.GetBeanTest">
              <lookup-method name="getBean" bean="teacher"/>
       </bean>

       <bean id="teacher" class="com.example.beans.bean.Teacher">
              <property name="name" value="王老师"/>
              <property name="age" value="22"/>
              <property name="sex" value="男"/>
              <replaced-method name="showMe" replacer="replacer"/>
       </bean>

       <bean id="replacer" class="com.example.beans.bean.TestMethodReplacer"/>

       <bean id="student" class="com.example.beans.bean.Student">
              <constructor-arg index="0" value="king.qian"/>
              <constructor-arg index="1" value="18"/>
              <constructor-arg index="2" value="男"/>
              <constructor-arg index="3" value="南大"/>
              <constructor-arg index="4" value="计算机"/>
              <constructor-arg index="5" ref="teacher"/>
       </bean>

       <bean id="teacher2" class="com.example.beans.bean.Teacher">
              <qualifier value="Teacher"/>
       </bean>

       <bean id="car" class="com.example.beans.bean.CarFactoryBean">
              <property name="carInfo" value="大众,199999999"/>
       </bean>

       <bean id="cycle" class="com.example.beans.bean.Cycle" init-method="init" destroy-method="destroy" scope="singleton"/>

       <!--bean创建时的前置后置处理器的使用-->
       <bean class="com.example.beans.bean.MyBeanPostProcessor" />

       <!--TestA,TestB,TestC测试循环依赖-->
<!--       <bean id="testA" class="com.example.beans.bean.TestA">-->
<!--              <constructor-arg index="0" ref="testB"/>-->
<!--       </bean>-->
<!--       <bean id="testB" class="com.example.beans.bean.TestB">-->
<!--              <constructor-arg index="0" ref="testC"/>-->
<!--       </bean>-->
<!--       <bean id="testC" class="com.example.beans.bean.TestC">-->
<!--              <constructor-arg index="0" ref="testA"/>-->
<!--       </bean>-->

       <!--TestD,TestE,TestF测试循环依赖-->
       <bean id="testD" class="com.example.beans.bean.TestD" scope="singleton">
              <property name="testE" ref="testE"/>
       </bean>
       <bean id="testE" class="com.example.beans.bean.TestE" scope="singleton">
              <property name="testF" ref="testF"/>
       </bean>
       <bean id="testF" class="com.example.beans.bean.TestF" scope="singleton">
              <property name="testD" ref="testD"/>
       </bean>

<!--       <bean id="cat" class="com.example.beans.bean.Cat" />-->

       <bean id="dog" class="com.example.beans.bean.Dog" scope="singleton" init-method="init" destroy-method="destroy"/>

       <bean id="rabbit" class="com.example.beans.bean.Rabbit" scope="singleton" />


       <!--嵌入式beans标签上使用，与import功能类似-->
       <beans>
              <bean id="dataSource3" class="com.example.beans.bean.DataSource">
                     <property name="host" value="192.168.1.1"/>
                     <property name="name" value="oracle"/>
                     <property name="password" value="123456"/>
              </bean>
       </beans>



</beans>